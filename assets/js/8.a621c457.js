(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{463:function(a,t,s){a.exports=s.p+"assets/img/java-datatype-001.5cf72a10.png"},464:function(a,t,s){a.exports=s.p+"assets/img/java-datatype-002.00cb97b7.png"},465:function(a,t,s){a.exports=s.p+"assets/img/java-datatype-003.c02e81cd.png"},466:function(a,t,s){a.exports=s.p+"assets/img/java-datatype-004.8ecc0e7e.png"},467:function(a,t,s){a.exports=s.p+"assets/img/java-datatype-005.5c2e3245.png"},485:function(a,t,s){"use strict";s.r(t);var e=s(4),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"java中的基础数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java中的基础数据类型"}},[a._v("#")]),a._v(" Java中的基础数据类型")]),a._v(" "),e("p",[a._v("Java中的基础数据类型一共有8钟，其中有4种整型、2种浮点类型、1种用于表示Unicode编码的字符单元的字符类型char（请参见论述char类型的章节）和1种用于表示真值的boolean类型")]),a._v(" "),e("h2",{attrs:{id:"整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[a._v("#")]),a._v(" 整型")]),a._v(" "),e("p",[a._v("整型用来存储没有小数部分的整数，\n四种整型，int，long，byte，short类型，分别对应了不同的长度和场景\n"),e("img",{attrs:{src:s(463),alt:"alt"}}),a._v("\nbyte经常用于图片操作的时候使用，short用的地方很少，除此之后，在使用整型的时候还可以尝试加入0b表示二进制，0x表示16进制，数字和数字之前可以使用_表示分割"),e("br"),a._v(" "),e("img",{attrs:{src:s(464),alt:"alt"}})]),a._v(" "),e("h2",{attrs:{id:"浮点类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型"}},[a._v("#")]),a._v(" 浮点类型")]),a._v(" "),e("p",[a._v("java中专门用来表示有小数部分的值,分为float和double类型，double是双精度类型，float是单精度类型，大部分情况下使用double类型。\n"),e("img",{attrs:{src:s(465),alt:"alt"}}),a._v("\n注意的是，无论是double和float都会把误差舍去，所以不适合用于金融计算。")]),a._v(" "),e("h2",{attrs:{id:"char类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#char类型"}},[a._v("#")]),a._v(" char类型")]),a._v(" "),e("p",[a._v("char类型用来表示单个字符，但是有些Unicode符需要两个char类型的值来表示。除了表示字符外，还可以表示特殊字符的转义字符\n"),e("img",{attrs:{src:s(466),alt:"alt"}})]),a._v(" "),e("h2",{attrs:{id:"boolean类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#boolean类型"}},[a._v("#")]),a._v(" boolean类型")]),a._v(" "),e("p",[a._v("boolean（布尔）类型有两个值：false和true，用来判定逻辑条件。")]),a._v(" "),e("h2",{attrs:{id:"类型转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[a._v("#")]),a._v(" 类型转换")]),a._v(" "),e("p",[a._v("java中各个基础数据类型转换如下图所示，实心箭头代表不会损失精度，虚线箭头则相反。\n"),e("img",{attrs:{src:s(467),alt:"alt"}})]),a._v(" "),e("h2",{attrs:{id:"操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[a._v("#")]),a._v(" 操作符")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("位移操作符"),e("br"),a._v("\n>>和<<运算符将位模式左移或右移。需要建立位模式来完成位掩码时，这两个运算符会很方便：")]),a._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nSystem"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("out")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("println"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("4的位模式是0100，向左移1，相当于处于2，<<符号相当于乘与2，注意这里的/>>和<<都是有符号移动，正数时补0，负数时补1\n>>>无符号右移符")])]),a._v(" "),e("li",[e("p",[a._v("字符串\n字符串的储存是存在堆中的，相当内容的字符串指向的是同一个字符串，java会把所有用到的字符串放进字符串池子里。")])])]),a._v(" "),e("h2",{attrs:{id:"大数值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大数值"}},[a._v("#")]),a._v(" 大数值")]),a._v(" "),e("p",[a._v("java中提供BigInteger和BigDecimal。这两个类可以处理包含任意长度数字序列的数值。BigInteger类实现了任意精度的整数运算，BigDecimal实现了任意精度的浮点数运算。\n但是这两个类不能使用运算符直接运算，只能使用方法进行计算。")])])}),[],!1,null,null,null);t.default=r.exports}}]);