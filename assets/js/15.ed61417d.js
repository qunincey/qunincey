(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{465:function(t,a,s){t.exports=s.p+"assets/img/git-rebase.83f3cdbb.png"},485:function(t,a,s){"use strict";s.r(a);var i=s(4),e=Object(i.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git相关知识总结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git相关知识总结"}},[t._v("#")]),t._v(" git相关知识总结")]),t._v(" "),i("h2",{attrs:{id:"git-add"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),i("p",[t._v("git add .：将工作空间新增和被修改的文件添加的暂存区"),i("br"),t._v("\ngit add -u:将工作空间被修改和被删除的文件添加到暂存区(不包含没有纳入Git管理的新增文件)"),i("br"),t._v("\ngit add -A：将文件的修改，文件的删除，文件的新建，添加到暂存区。")]),t._v(" "),i("h2",{attrs:{id:"git重命名文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git重命名文件"}},[t._v("#")]),t._v(" git重命名文件")]),t._v(" "),i("p",[t._v("git mv 旧文件名 新文件名 eg:  git mv readme Rename\n实际操作过可以直接改文件名，然后走add  commit流程效果是一样的。")]),t._v(" "),i("h2",{attrs:{id:"删除文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[t._v("#")]),t._v(" 删除文件")]),t._v(" "),i("p",[t._v("git rm  文件名")]),t._v(" "),i("h2",{attrs:{id:"git-log查看日志文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-log查看日志文件"}},[t._v("#")]),t._v(" git log查看日志文件")]),t._v(" "),i("p",[t._v("git log --oneline 把日志简化后显示\ngit log -n3 显示最近的3个提交信息  n后面可加任何数字\ngit log -n3 --oneline 最近的3个提交信息  简化显示\ngit log --all 查看所有分支的提交信息\ngit log --graph 图形化提交信息")]),t._v(" "),i("h2",{attrs:{id:"gitk"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitk"}},[t._v("#")]),t._v(" gitk")]),t._v(" "),i("p",[t._v("gitk可视化工具")]),t._v(" "),i("h2",{attrs:{id:"git-cat-file"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-cat-file"}},[t._v("#")]),t._v(" git cat-file")]),t._v(" "),i("p",[t._v("查看commit,tree,blob信息")]),t._v(" "),i("p",[t._v("git cat-file -p 53052041d76d73c0 -p 查看内容\ngit cat-file -t 53052041d76d73c0 -t 查看文件类型\n执行完后会显示commit内容")]),t._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("tree 69e9543530ed4eed2e3ff22a264033ea12a2ad3c\nparent 0039127e3da9ba20d25276f2a54af48cc8c3ad32\nauthor qunincey@gmail.com <qunincey@gmail.com> 1590927581 +0800\ncommitter qunincey@gmail.com <qunincey@gmail.com> 1590927581 +0800\n\nfix\n")])]),t._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[t._v("1")]),i("br"),i("span",{staticClass:"line-number"},[t._v("2")]),i("br"),i("span",{staticClass:"line-number"},[t._v("3")]),i("br"),i("span",{staticClass:"line-number"},[t._v("4")]),i("br"),i("span",{staticClass:"line-number"},[t._v("5")]),i("br"),i("span",{staticClass:"line-number"},[t._v("6")]),i("br")])]),i("p",[t._v("tree 是commit包含的树信息 parent是上一个提交信息")]),t._v(" "),i("h2",{attrs:{id:"commit-tree-blob"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#commit-tree-blob"}},[t._v("#")]),t._v(" commit, tree , blob")]),t._v(" "),i("p",[t._v("每一次提交都会生成一个commit对象，commit中每一个文件夹会生成一个树，每一个文件会生成一个blob，每一个blob和数都会对应的一个hash值，git在大部分情况下如果hash值相同（就是没有修改的情况下）都会使用同一个hash")]),t._v(" "),i("h2",{attrs:{id:"删除分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),i("p",[t._v("git branch -d 分支名 删除分支，当分支没有被合并的时候会报一个警告，如果确定删除可以使用"),i("br"),t._v("\ngit branch -D 分支名")]),t._v(" "),i("h2",{attrs:{id:"修改提交信息"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#修改提交信息"}},[t._v("#")]),t._v(" 修改提交信息")]),t._v(" "),i("p",[t._v("git commit --amend 修改最近一次commit信息\n修改最近几次的commit\ngit rebase -i gitcommit的hash值(选择你要修改的commit的上一个提交)\n弹出交互式界面，如下图:"),i("br"),t._v(" "),i("img",{attrs:{src:s(465),alt:"alt"}}),i("br"),t._v("\n讲要修改的提交前的pick改为reword或者r，保存并退出，git会自动弹出下一个编辑提交信息的界面")]),t._v(" "),i("h2",{attrs:{id:"合并提交信息"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#合并提交信息"}},[t._v("#")]),t._v(" 合并提交信息")]),t._v(" "),i("p",[t._v("git rebase -i gitcommit的hash值(选择你要修改的commit的上一个提交)\n同样需要打开交互是界面，讲pick改为squash即可，注意无论合并几个，都要留一个你想要的提交写出pick，保存并退出，git会自动弹出下一个编辑合并后提交的信息")]),t._v(" "),i("h2",{attrs:{id:"比较暂存区和head文件的差异"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#比较暂存区和head文件的差异"}},[t._v("#")]),t._v(" 比较暂存区和HEAD文件的差异")]),t._v(" "),i("p",[t._v("git diff --cached")]),t._v(" "),i("h2",{attrs:{id:"比较暂存区和工作区之间的差异"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#比较暂存区和工作区之间的差异"}},[t._v("#")]),t._v(" 比较暂存区和工作区之间的差异")]),t._v(" "),i("p",[t._v("git diff\ngit diff -- 具体文件名  查看具体文件差异")]),t._v(" "),i("h2",{attrs:{id:"比较两个分支之间的差异"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#比较两个分支之间的差异"}},[t._v("#")]),t._v(" 比较两个分支之间的差异")]),t._v(" "),i("p",[t._v("git diff 分支名字 分支名字 -- 文件名  不加文件名")]),t._v(" "),i("h2",{attrs:{id:"git-reset命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-reset命令"}},[t._v("#")]),t._v(" git reset命令")]),t._v(" "),i("p",[t._v("git reset HEAD 让暂存区回复和HEAD一样的状态，这里的恢复不是删除或者还原文件，只是将暂存区的文件还原回工作区\ngit reset HEAD 文件名  单独还原某一个文件")]),t._v(" "),i("p",[t._v("git reset 有三个参数\n--soft 这个只是把 HEAD 指向的 commit 恢复到你指定的 commit，暂存区 工作区不变\n--hard 这个是 把 HEAD， 暂存区， 工作区 都修改为 你指定的 commit 的时候的文件状态\n--mixed 这个是不加时候的默认参数，把 HEAD，暂存区 修改为 你指定的 commit 的时候的文件状态，工作区保持不变")]),t._v(" "),i("h2",{attrs:{id:"git-checkout"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),i("p",[t._v("git checkout 文件名  从工作区取消文件的修改")]),t._v(" "),i("h2",{attrs:{id:"git-stash"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),i("p",[t._v("git stash 将工作区的变更保存\ngit stash 查看储藏的列表\ngit stash apply 将储藏的内容还原，但是stash list里的记录不删除\ngit stash pop 将储藏的内容还原，但是stash list里的记录删除")]),t._v(" "),i("h2",{attrs:{id:"git获取ssh密钥"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git获取ssh密钥"}},[t._v("#")]),t._v(" git获取ssh密钥")]),t._v(" "),i("p",[t._v("打开git bash 输入如下命令即可。")]),t._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("ls -al ~/.ssh\n")])]),t._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[t._v("1")]),i("br")])]),i("h2",{attrs:{id:"git远程仓库相关命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git远程仓库相关命令"}},[t._v("#")]),t._v(" git远程仓库相关命令")]),t._v(" "),i("p",[t._v("git remote -v 查看远程仓库信息"),i("br"),t._v("\ngit remote rename "),i("old",[i("new",[t._v(" 重命名原仓库名字")])],1)],1)])}),[],!1,null,null,null);a.default=e.exports}}]);