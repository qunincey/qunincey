(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{500:function(a,t,s){"use strict";s.r(t);var r=s(4),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"final关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final关键字"}},[a._v("#")]),a._v(" final关键字")]),a._v(" "),s("p",[a._v("常量关键字，使用final的变量第一次赋值之后不能被更改。final这个不可更改的意思是不更改引用对象，即用final修饰的字段和对象永远指向第一次赋值的时候的那个对象，但是对象本身的数据可以更改")]),a._v(" "),s("ul",[s("li",[a._v("fianl类和方法"),s("br"),a._v("\nfinal除了修饰域外，还可以修饰类和方法，当final修饰类时，类中所有的方法自动添加final类，这种举动是为了避免子类在继承的时候改变相对应的方法，也就是fianl不允许子类改变自身的方法。")])]),a._v(" "),s("h2",{attrs:{id:"strictfp关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strictfp关键字"}},[a._v("#")]),a._v(" strictfp关键字")]),a._v(" "),s("p",[a._v("strict float point 精确浮点数的简称，可以用与类和方法，接口，使用了这个关键字可以保证在不同机器上的浮点数的准确度。")]),a._v(" "),s("h2",{attrs:{id:"static关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static关键字"}},[a._v("#")]),a._v(" static关键字")]),a._v(" "),s("ul",[s("li",[a._v("静态域\n如果static修饰到域上，那么每一个类都共享这个域,所有对象访问nextId都是相同的值"),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" nextId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[a._v("静态常量\nstatic在java中更多的是放在常量里 final保证无法更改，static保证所有对象一致"),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" PI\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[a._v("静态方法\n修饰在方法前，这个方法就相当于独立于类了，不能再访问其他域，只能访问自身类的静态域。换句话说，就没有隐式参数了。")])]),a._v(" "),s("h2",{attrs:{id:"abstract关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract关键字"}},[a._v("#")]),a._v(" abstract关键字")]),a._v(" "),s("p",[a._v("抽象关键字，可以用在类或者方法上，用在类上，类中所有的方法都是抽象方法，抽象类不能实例化")])])}),[],!1,null,null,null);t.default=e.exports}}]);